@model InventoryManagement.Models.InventoryModel
@using InventoryManagement.Models

@{
    ViewBag.Title = "Add Inventory";
}


<h2>Add Inventory</h2>

@if (ViewBag.ErrorMessage != null)
{
    <p class="alert alert-danger">@ViewBag.ErrorMessage</p>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.InventoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InventoryID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InventoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })*@
                @{
                    List<ProductModel> products = ViewBag.Products;
                }
                @Html.DropDownListFor(model => model.ProductID, products.Select(product => new SelectListItem { Value = product.ProductID.ToString(), Text = product.ProductID.ToString() }))
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BinID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BinID, new { htmlAttributes = new { @class = "form-control" } })*@
                @{
                    List<BinModel> bins = ViewBag.Bins;
                }
                @Html.DropDownListFor(model => model.BinID, bins.Select(bin => new SelectListItem { Value = bin.BinID.ToString(), Text = bin.BinID.ToString() }))
                @Html.ValidationMessageFor(model => model.BinID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QTY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QTY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QTY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
